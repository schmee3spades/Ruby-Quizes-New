require '/home/bstarr/Ruby-Quizzes-New/quiz10/Crosswords.rb';

describe "Crosswords" do
  before :each do
  end

  it 'Should solve simple example' do
    crossword = RubyQuiz::Crosswords.new( 'simple_example' )
    crossword.print_crossword
    crossword.output_string.should == 
"################\n" +
"#1   #    #2   #\n" +
"#    #    #    #\n" +
"################\n" +
"#    ######    #\n" +
"#    ######    #\n" +
"################\n" +
"#3   #    #    #\n" +
"#    #    #    #\n" +
"################\n"
  end

  it 'Should solve large example' do
    crossword = RubyQuiz::Crosswords.new( 'large_example' )
    crossword.print_crossword
    crossword.output_string.should ==
"     #####################          \n" +
"     #1   #    #2   #3   #          \n" +
"     #    #    #    #    #          \n" +
"####################################\n" +
"#4   #    ######5   #    #6   #7   #\n" +
"#    #    ######    #    #    #    #\n" +
"####################################\n" +
"#8   #    #9   #    #    #10  #    #\n" +
"#    #    #    #    #    #    #    #\n" +
"#####################    ###########\n" +
"#    ######11  #    #               \n" +
"#    ######    #    #               \n" +
"####################################\n" +
"#12  #13  #    ######14  #15  #    #\n" +
"#    #    #    ######    #    #    #\n" +
"####################################\n" +
"     #16  #    #    #    #    #     \n" +
"     #    #    #    #    #    #     \n" +
"     ##########################     \n"
  end

  it 'Should solve complex exmaple' do
    crossword = RubyQuiz::Crosswords.new( 'complex_example' )
    crossword.print_crossword
    crossword.output_string.should ==
"     ######    #####################\n" +
"     #1   #    #2   #3   #4   #5   #\n" +
"     #    #    #    #    #    #    #\n" +
"###########    #####################\n" +
"#6   #    #    #7   #    #    #    #\n" +
"#    #    #    #    #    #    #    #\n" +
"###########    #####################\n" +
"#    #         #8   #    #    #    #\n" +
"#    #         #    #    #    #    #\n" +
"####################################\n" +
"#9   #    #    #    #    #    #    #\n" +
"#    #    #    #    #    #    #    #\n" +
"####################################\n" +
"#    ################10  #    #    #\n" +
"#    ################    #    #    #\n" +
"####################################\n" +
"#11  #12  #13  #14  #    #          \n" +
"#    #    #    #    #    #          \n" +
"####################################\n" +
"#15  #    #    #    #    #16  #17  #\n" +
"#    #    #    #    #    #    #    #\n" +
"####################################\n" +
"               #18  #    #    #    #\n" +
"               #    #    #    #    #\n" +
"     ######    #####################\n" +
"     #19  #         #20  #    #     \n" +
"     #    #         #    #    #     \n" +
"###########    #####################\n" +
"#21  #    #    #22  #    #    #23  #\n" +
"#    #    #    #    #    #    #    #\n" +
"###########    #####################\n" +
"#    #         #24  #    #    #    #\n" +
"#    #         #    #    #    #    #\n" +
"####################################\n" +
"#25  #    #    #    #    #    #    #\n" +
"#    #    #    #    #    #    #    #\n" +
"####################################\n" +
"#    #                        #    #\n" +
"#    #                        #    #\n" +
"######    ################    ######\n" +
"#    #    #26  #    #27  #    #    #\n" +
"#    #    #    #    #    #    #    #\n" +
"######    ################    ######\n" +
"#    #    #    #    #    #    #    #\n" +
"#    #    #    #    #    #    #    #\n" +
"######    ######    ######    ######\n" +
"#    #    #    #              #    #\n" +
"#    #    #    #              #    #\n" +
"######    ##########################\n" +
"#    #    #28  #    #    #    #    #\n" +
"#    #    #    #    #    #    #    #\n" +
"######    ##########################\n"
  end
end
